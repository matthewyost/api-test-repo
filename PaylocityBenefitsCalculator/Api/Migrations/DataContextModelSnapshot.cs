// <auto-generated />
using System;
using Api.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Api.Models.Dependent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Dependents");

                    b.HasCheckConstraint("CK_Dependent_Relationship", "\r\n				NOT EXISTS (\r\n					SELECT 1\r\n					FROM [Dependent] d\r\n					WHERE d.EmployeeId = EmployeeId \r\n						AND d.Relationship IN (1,2)\r\n						AND d.Id <> Id)");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a581f888-1c95-4cef-9211-9ce2f8990fd3"),
                            DateOfBirth = new DateTime(1998, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("212dbc68-6543-4eae-b9e2-6854317a8cda"),
                            FirstName = "Spouse",
                            LastName = "Morant",
                            Relationship = 1
                        },
                        new
                        {
                            Id = new Guid("729667e2-ba17-41ac-b98a-4a9f02da451e"),
                            DateOfBirth = new DateTime(2020, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("212dbc68-6543-4eae-b9e2-6854317a8cda"),
                            FirstName = "Child1",
                            LastName = "Morant",
                            Relationship = 3
                        },
                        new
                        {
                            Id = new Guid("452b5267-6507-4d09-89ed-e2a3eff63d26"),
                            DateOfBirth = new DateTime(2021, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("212dbc68-6543-4eae-b9e2-6854317a8cda"),
                            FirstName = "Child2",
                            LastName = "Morant",
                            Relationship = 3
                        },
                        new
                        {
                            Id = new Guid("1fe23d8a-1b9e-46b4-a1ef-b60db99eac02"),
                            DateOfBirth = new DateTime(1974, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("6221d62d-fa7f-4b2d-84a9-6216b99c6edf"),
                            FirstName = "DP",
                            LastName = "Jordan",
                            Relationship = 2
                        });
                });

            modelBuilder.Entity("Api.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("209500a4-bd3f-4787-b139-41ead5138f1f"),
                            DateOfBirth = new DateTime(1984, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "LeBron",
                            LastName = "James",
                            Salary = 75420.99m
                        },
                        new
                        {
                            Id = new Guid("212dbc68-6543-4eae-b9e2-6854317a8cda"),
                            DateOfBirth = new DateTime(1999, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ja",
                            LastName = "Morant",
                            Salary = 92365.22m
                        },
                        new
                        {
                            Id = new Guid("6221d62d-fa7f-4b2d-84a9-6216b99c6edf"),
                            DateOfBirth = new DateTime(1963, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Jordan",
                            Salary = 143211.12m
                        });
                });

            modelBuilder.Entity("Api.Models.Dependent", b =>
                {
                    b.HasOne("Api.Models.Employee", "Employee")
                        .WithMany("Dependents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Api.Models.Employee", b =>
                {
                    b.Navigation("Dependents");
                });
#pragma warning restore 612, 618
        }
    }
}
